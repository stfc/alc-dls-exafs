[project]
name = "larch-cli-wrapper"
version = "0.1.0"
authors = [
    { name = "Kane Shenton", email = "jkshenton@gmail.com" },
]
description = "A CLI wrapper for larch EXAFS processing"
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Physics",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
keywords = ["xafs", "exafs", "spectroscopy", "larch", "feff", "materials-science"]
dependencies = [
    "ase<4.0,>=3.25",
    "numpy<3.0.0,>=1.26.4",
    "xraylarch>=0.9.47",
    "typer<1.0.0,>=0.17.3",
    "rich<14.0.0,>=13.9.1",
    "matplotlib>=3.5",
    "larixite>=0.1.0",
    "marimo<0.16.0,>=0.15.5",
    "weas-widget>=0.1.26",
]


[project.urls]
Homepage = "https://github.com/stfc/alc-dls-exafs"
Repository = "https://github.com/stfc/alc-dls-exafs"
Documentation = "https://github.com/stfc/alc-dls-exafs/tree/main/docs"
"Bug Tracker" = "https://github.com/stfc/alc-dls-exafs/issues"

[project.scripts]
larch-cli = "larch_cli_wrapper.cli:app"

[project.optional-dependencies]
full = [
     "pymatgen<2026.0,>=2025.1.24",
]
[dependency-groups]
dev = [
    "pytest<9.0,>=8.0",
    "pytest-cov<5.0.0,>=4.1.0",
    "mypy>=1.11.0",
    "types-setuptools",
    "types-PyYAML",
    "types-tqdm",
]

pre-commit = [
    "pre-commit<5.0.0,>=4.2.0",
    "ruff<1.0.0,>=0.11.13",
]
[tool.uv]
default-groups = [
    "dev",
    "pre-commit",
]

[build-system]
requires = ["uv_build>=0.8.4,<0.9.0"]
build-backend = "uv_build"

[tool.uv.build-backend]
module-name = "larch_cli_wrapper"
module-root = ""


# =======================
# Linting: Ruff
# =======================
[tool.ruff]
line-length = 88
target-version = "py310"
exclude = [
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".tox",
    ".venv",
    "venv",
    "env",
    "build",
    "dist",
    "scripts",
    "__pypackages__",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle
    "W",   # stylistic issues
    "F",   # pyflakes
    "I",   # isort
    "B",   # bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "YTT", # flake8-2020
    "BLE", # bugbear extra
    "S",   # bandit security
    "D",   # docstrings (pydocstyle)
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
'tests/**/*' = ['D', 'S101']
'**/test_*.py' = ['D', 'S101']
'__init__.py' = ['D', 'F401']
'larch_cli_wrapper/cli.py' = ['B008']
'notebooks/exafs_pipeline.py' = [
    'F841',
    'B018']
'notebooks/nanoparticle_builder.py' = [
    'B018']


# =======================
# Type checking: mypy
# =======================
[tool.mypy]
python_version = "3.10"
strict = true
# Note: `strict = true` enables:
#   disallow_untyped_defs, check_untyped_defs, no_implicit_optional, warn_no_return, etc.
# So we don't need to redeclare them.

# Enable extra diagnostics
enable_error_code = ["redundant-expr", "truthy-bool"]

# Handle untyped third-party libraries
[[tool.mypy.overrides]]
module = [
    "larch.*",
    "larixite.*",
    "ase.*",
    "pymatgen.*",
]
ignore_missing_imports = true


# =======================
# Testing: pytest
# =======================
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]


# =======================
# Coverage: pytest-cov
# =======================
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/conftest.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]
