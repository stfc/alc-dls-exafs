from larixite import cif2feffinp
from larch.xafs.feffrunner import feff8l
from larch.xafs import xftf
from larch.io import read_ascii
from larch import Group

import os

import matplotlib.pyplot as plt

def plot_fourier_transform(exafs):

    fig, ax = plt.subplots()

    ax.plot(exafs.r, exafs.chir_mag)
    ax.set_xlabel(r'R ($\AA$)')
    ax.set_ylabel(r'$\vert\chi(\mathrm{R})\vert$')
    ax.set_title('Fourier Transform of EXAFS')

    fig.savefig('EXAFS_reference.pdf', format='pdf')

    plt.show()

def run_postprocessing(feff_directory):

    #
    # ...Read data generated by FEFF (in ./feff)
    #
    feff_data = read_ascii(f"{feff_directory}/chi.dat")
    g = Group()
    g.k = feff_data.k
    g.chi = feff_data.chi
    xftf(g, kweight=2, window='hanning', dk=1, kmin=2, kmax=14)

    return(g)
    
def run_feff_no_pymatgen(cifpath, absorber, feff_directory):
    
    #
    # ...Generate and write and input file for FEFF
    #    the directory ./feff must already exist
    #
    inp = cif2feffinp(cifpath, absorber)
    with open(f"{feff_directory}/test.inp", "w") as f:
        f.write(inp)
        f.close()

    #
    # ...Run FEFF on input file
    #    Additional runtime parameters could be added here
    #
    feff8l(folder=feff_directory, feffinp='test.inp', verbose=True)

if __name__ == "__main__":

    feff_directory = os.path.join(os.getcwd(), 'feff')
    cif_location   = os.path.join(os.getcwd(), 'Hematite.cif')
    absorbing_atom = 'Fe'

    # ...Run FEFF
    #run_feff_no_pymatgen(cif_location, absorbing_atom, feff_directory)

    # ...Postprocessing of FEFF output
    exafs = run_postprocessing(feff_directory)

    # ...Plot FT of EXAFS signal
    plot_fourier_transform(exafs)
